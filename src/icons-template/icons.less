@version: '2.1.0';

@font-face {
  font-family: "<%= fontName %>";
  src: url('<%= fontPath %><%= fontName %>.eot?v=@{version}');
  src: url('<%= fontPath %><%= fontName %>.eot?#iefix&v=@{version}') format('eot'),
  url('<%= fontPath %><%= fontName %>.woff2?v=@{version}') format('woff2'),
  url('<%= fontPath %><%= fontName %>.woff?v=@{version}') format('woff'),
  url('<%= fontPath %><%= fontName %>.ttf?v=@{version}') format('truetype'),
  url('<%= fontPath %><%= fontName %>.svg?#<%= fontName %>&v=@{version}') format('svg');
}

.<%= cssClass%>-base-pseudo {
  font-family: "<%= fontName %>";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
  text-decoration: none;
  text-transform: none;
}

.<%= cssClass%>-char(@filename) {
  <% _.each(glyphs, function(glyph) { %>@<%= glyph.fileName %>: "\<%= glyph.codePoint %>";
  <% }); %>
  content: @@filename;
}

.<%= cssClass%>(@filename, @insert: before) {
  @pseudo-selector: ~":@{insert}";

  &@{pseudo-selector} {
    &:extend(.<%= cssClass%>-base-pseudo);
    .<%= cssClass%>-char(@filename);
  }
}

<% _.each(glyphs, function(glyph) { %>.<%= cssClass%>.darlin-<%= glyph.fileName %> {
  .<%= cssClass%>(<%= glyph.fileName %>);
}
<% }); %>
